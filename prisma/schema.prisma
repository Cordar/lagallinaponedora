// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum ProductCategory {
    COMBO
    DISH
    DRINK
    DESSERT
}

model Product {
    id                   Int             @id @default(autoincrement())
    name                 String
    price                Int
    imageSrc             String?
    category             ProductCategory
    cookingTimeInMinutes Int
    groups               Group[]
    chosenProduct        ChosenProduct[]
}

model Group {
    id          Int          @id @default(autoincrement())
    name        String
    subproducts Subproduct[]
    product     Product      @relation(fields: [productId], references: [id], onDelete: Cascade)
    productId   Int
}

model Subproduct {
    id               Int                @id @default(autoincrement())
    name             String
    group            Group              @relation(fields: [groupId], references: [id], onDelete: Cascade)
    groupId          Int
    chosenSubproduct ChosenSubproduct[]
}

enum OrderStatus {
    CREATED
    PAID
    COOKED
    DELIVERED
}

model Order {
    id             Int             @id @default(autoincrement())
    status         OrderStatus     @default(CREATED)
    chosenProducts ChosenProduct[]

    customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
    customerId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model ChosenProduct {
    id               Int                @id @default(autoincrement())
    amount           Int
    product          Product            @relation(fields: [productId], references: [id], onDelete: Cascade)
    productId        Int
    order            Order?             @relation(fields: [orderId], references: [id])
    orderId          Int?
    chosenSubproduct ChosenSubproduct[]
}

model ChosenSubproduct {
    id Int @id @default(autoincrement())

    chosenProduct   ChosenProduct @relation(fields: [chosenProductId], references: [id], onDelete: Cascade)
    chosenProductId Int
    subproduct      Subproduct    @relation(fields: [subproductId], references: [id], onDelete: Cascade)
    subproductId    Int
}

model Customer {
    id        Int     @id @default(autoincrement())
    sessionId String  @unique
    email     String?
    name      String?
    orders    Order[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
